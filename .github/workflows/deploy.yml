name: Deploy and Update Infra

on:
    push:
        branches:
            - main

env:
    TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
    DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_PAT }}

jobs:
    infra:
        name: Provision Infrastructure
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              run: cd terraform && terraform init

            - name: Terraform Plan
              run: cd terraform && terraform plan -out=tfplan

            - name: Terraform Apply
              run: cd terraform && terraform apply -auto-approve "tfplan"

    build-and-push:
      uses: ./.github/workflows/build-push.yml

    deploy:
        name: Deploy Manifests to Cluster
        runs-on: ubuntu-latest
        needs: [infra, build-and-push]
        environment: production
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITALOCEAN_PAT }}

            - name: Get kubeconfig
              run: doctl kubernetes cluster kubeconfig save loco-cluster

            - name: Verify cluster access
              run: kubectl get nodes

            - name: Wait for nodes to be ready
              run: kubectl wait --for=condition=Ready node --all --timeout=180s

            - name: Install helm
              uses: azure/setup-helm@v4.3.0
              id: install

            - name: Apply app manifests
              run: |
                  kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.3.0/standard-install.yaml || true
                  kubectl apply -f ./kube/base/cert_manager_install.yaml || true
                  kubectl apply -f ./kube/base/envoy_install.yaml || true

            - name: Build and Push Docker Image
              uses: ./.github/workflows/build-push.yml

            - name: Apply resources
              run: |
                  kubectl apply -f ./kube/namespace.yml
                  kubectl apply -f ./kube/gateway.yml
                  kubectl apply -f ./kube/loco_route.yml
                  kubectl create secret generic env-config \
                    --from-literal=GITLAB_PAT=${{ secrets.GITLAB_PAT }} \
                    --from-literal=GITLAB_PROJECT_ID=${{ secrets.GITLAB_PROJECT_ID }} \
                    --from-literal=GITLAB_TOKEN_NAME=${{ secrets.GITLAB_TOKEN_NAME }} \
                    --from-literal=APP_ENV=${{ secrets.APP_ENV }} \
                    --from-literal=LOG_LEVEL=${{ secrets.LOG_LEVEL }} \
                    --from-literal=PORT=${{ secrets.PORT }} \
                    --dry-run=client -o yaml | kubectl apply -f - || true
                  kubectl apply -f ./kube/app_deployment.yml
                  kubectl apply -f ./kube/cert_manager.yml
                  kubectl apply -f ./kube/certificate.yml
            
            - name: Enable Observability
              run: |
                  kubectl create namespace monitoring || true

                  helm install eg-addons oci://docker.io/envoyproxy/gateway-addons-helm \
                    --version v1.4.1 \
                    -n monitoring \
                    --set tempo.enabled=false \
                    --set loki.enabled=false \
                    --set fluent-bit.enabled=false \
                    --set grafana.adminPassword="${{ secrets.GRAFANA_PASSWORD }}" || true
                  
                  kubectl apply -f ./kube/monitoring_route.yml